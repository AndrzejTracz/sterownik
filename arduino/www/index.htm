<!doctype html>
<html lang="en" ng-app="app">
	<head>
		<meta charset="utf-8">
		<link rel="stylesheet" href="b.css" />
		<link rel="stylesheet" href="http://cdn.jsdelivr.net/jqplot/1.0.2/jquery.jqplot.min.css" />
		<!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>-->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.2/angular.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.2/angular-route.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.2/angular-cookies.js"></script>
		<script src="http://cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js"></script>
		<script type="text/ng-template" id="dash.tpl.html">
			<div class="row-fluid">
				<div class="span3 well">
					<h2>Status sterownika:</h2>
					<table class="table">
						<tr>
							<td>Polaczenie:</td>
							<td>
								<span ng-show="aok">
									<i class="icon-thumbs-up icon-white"></i> <span class="label label-success">ONLINE</span>
								</span>
								<span ng-show="!aok">
									<i class="icon-thumbs-down icon-white"></i> <span class="label label-important">OFFLINE</span>
								</span>
							</td>
						</tr>
						<tr>
							<td>Uptime</td> 
							<td><i class="icon-time icon-white"></i> {{uptime}} </td>
						</tr>
						<tr>
							<td>Wersja</td> 
							<td> {{version}} </td>
						</tr>
						<tr>
							<td>Pompa CWU1</td> 
							<td>
								<span ng-show="pump.cwu1 == 'OFF'" class="label label-important"> {{pump.cwu1}}</span>
								<span ng-show="pump.cwu1 == 'ON'" class="label label-success"> {{pump.cwu1}}</span>
							</td>
                                                </tr>
                                                <tr>
                                                        <td>Pompa CWU2</td> 
                                                        <td>
                                                                <span ng-show="pump.cwu2 == 'OFF'" class="label label-important"> {{pump.cwu2}}</span>
                                                                <span ng-show="pump.cwu2 == 'ON'" class="label label-success"> {{pump.cwu2}}</span>
                                                        </td>
						</tr>
                                                <tr>         <td>Podajnik</td> <td>
                                                                <span ng-show="thermos.pod == '0'" class="label label-important"> OFF </span>
                                                                <span ng-show="thermos.pod == '1'" class="label label-success"> ON </span></td>
						<tr>
							<td>Next Update</td> 
							<td><i class="icon-calendar icon-white"></i> {{nextResponse}} s.</td>
						</tr>
					</table>
				</div>
				<div class="span2 well">
					<h2>Pomiary:</h2>
					<table class="table">
						<tr ng-repeat="thermo in thermos.thermos" ng-init="sources = ['tCO','tCWU1','tCWU2','tSpaliny','t4D']">
							<td>{{sources[$index]}}<br>
							<span class="badge badge-warning">{{thermo.t | number:2}} &deg;C</span></td>
						</tr>
                                                <tr><td>Wentylator<br>
                                                        <span class="badge badge-warning">{{thermos.wen0 | number}} %</span></td></tr>
                                                <tr><td>Wentylator_mod<br>
                                                        <span class="badge badge-warning">{{thermos.wen1 | number}} %</span></td></tr>
					</table>
					</div>
				<div class="span4 well">
					<h2>Konfiguracja:</h2>
					<table class="table">
						<tr>
							<td>Arduino IP</td> 
							<td><input type="url" class="input" placeholder="Arduino IP" ng-model="ip"></td>
						</tr>
						<tr>
							<td>Aktualizuj co:</td>
							<td>
								<div class="input-append">
									<input type="number" class="input input-small" ng-model="updateRate">
									<span class="add-on">s.</span>
								</div>
							</td>
						</tr>
						<tr>
							<td>Ilosc danych:</td>
							<td><input type="number" class="input input-small" ng-model="dataPoints"></td>
						</tr>
					<tr><td><a ng-click="saveIp()" class="btn"><i class="icon-refresh icon-white"></i> Zapisz </a></td></tr>
					</table>
				</div>
				<div class="span3 well">
					<h2>Polecenia:</h2>
					<table class="table">
					<tr><td><a ng-click="updateNow()" class="btn"><i class="icon-refresh icon-white"></i> Aktualizuj </a></td></tr>
					<tr><td>
						<div class="btn-group">
							<a ng-click="resetSter()" class="btn"><i class="icon-play icon-white"></i> Reset<BR>Sterownika</a>
							<!--<a ng-click="pumpOff()" class="btn"><i class="icon-stop icon-white"></i> Stop CWU1</a>-->
						</div>
					    </td>
                                        </tr>
                                        <!--<tr><td>
                                                <div class="btn-group">
                                                        <a ng-click="pumpOn()" class="btn"><i class="icon-play icon-white"></i> Start CWU2</a>
                                                        <a ng-click="pumpOff()" class="btn"><i class="icon-stop icon-white"></i> Stop CWU2</a>
                                                </div>
                                                </td>
					-->
					</tr>
					</table>
				</div>
			</div>
			<textarea id="plikkonfiguracji" ng-model="plikkonfiguracji" placeholder="To jest miejsce na dane z pliku konfiguracyjnego. Nacisnij Odczyt">
			</textarea>
			<div class="btn-group">
				<a ng-click="konfLoad()" class="btn"><i class="icon-play icon-white"></i> Odczyt konfiguracji ze sterownika</a><br><br>
			</div>
		</script>
		
		<script>

			angular.module('app', ['ngRoute','ngCookies']).
			  config(function($routeProvider, $locationProvider) {
			  $routeProvider.
			      when('/', {templateUrl: 'dash.tpl.html',   controller: DashCtrl}).
			      otherwise({redirectTo: '/'});
			});

			function DashCtrl($scope,$http,$cookies){
				$scope.update = function(){
					$.get($scope.ip + "/thermos.json",function(data){
						$scope.$apply(function(){
							$scope.thermos = JSON.parse(data);
							$scope.lastResponse = new Date();
							//new Date(InputData[i++] + 2000, InputData[i++] - 1, InputData[i++], InputData[i++], InputData[i++], InputData[i++], 0);
							$scope.aok = true;
						});
						now = $scope.lastResponse.getTime() + 1000*60*60;
						//console.log(data);console.log($scope.thermos);
						window.lines.forEach(function(l,i){
							if (l.label != "wentylator" && l.label != "wentylator_mod" && l.label != "podajnik"){
							    l.data.push([now,$scope.thermos.thermos[i].t]);
							    if(l.data.length > $scope.dataPoints){
								    l.data.shift();
							    }
							}
							if (l.label == "wentylator") {
							l.data.push([now,$scope.thermos.wen0]);
							if(l.data.length > $scope.dataPoints){
								l.data.shift();
							}}
							if (l.label == "wentylator_mod") {
							l.data.push([now,$scope.thermos.wen1]);
							if(l.data.length > $scope.dataPoints){
								l.data.shift();
							}}
							if (l.label == "podajnik") {
							l.data.push([now,$scope.thermos.pod*25]);
							if(l.data.length > $scope.dataPoints){
								l.data.shift();
							}}
						});
						
						window.updateGraph();
						
					}).error(function() {
						$scope.$apply(function(){
							$scope.aok = false;
						});
					});
					
					$.get($scope.ip + "/pump.json",function(data){
						$scope.$apply(function(){
							$scope.pump = JSON.parse(data);
							$scope.aok = true;
						});
					});
					
					$.get($scope.ip + "/stats.json",function(data){
						$scope.$apply(function(){
							var x = JSON.parse(data).time;
							var s = x % 60;
							x = (x /60)| 0;
							var m = x % 60;
							x = (x /60)| 0;
							var h = x
							//$scope.uptime = JSON.parse(data).time;
							$scope.uptime = ""+h+" h. "+ m+" m. "+ s+"s.";
							$scope.version = JSON.parse(data).ver;
							$scope.aok = true;
						});
					});
				} 
				
				$scope.updateNow = function(){
					$scope.update();
					$scope.nextResponse = $scope.updateRate;
				}
				$scope.saveIp = function(){
					$cookies.put('dataPoints',$scope.dataPoints);
					$cookies.put('updateRate',$scope.updateRate);
					$cookies.put('ip',$scope.ip);
				}

				$scope.resetSter = function(){
					$.get($scope.ip + '/reset',{},function(){
					});
				}

$scope.autoExpand = function(e) {
    var element = typeof e === 'object' ? e.target : document.getElementById(e);
    var scrollHeight = element.scrollHeight;// -60;
    element.style.height =  scrollHeight + "px";
};
				$scope.konfLoad = function(){
					$.get($scope.ip + '/config.txt').then(
				    function(response) {
				        $scope.plikkonfiguracji = response;
					$scope.autoExpand('plikkonfiguracji');
				    }, function(response) {
				        //$scope.plikkonfiguracji = "problem z odczytem";
				    });
				
				}

				$scope.konfSave = function(){
$.ajax({   url: $scope.ip + '/upload/config.txt',   type: 'PUT', data: ''+$scope.plikkonfiguracji });
				//    $http.put($scope.ip + '/upload/config.txt',$scope.plikkonfiguracji).then(
				//function(response) {
				//}, function(response) {
				//});
				
				}
				
				$scope.pumpOn = function(){
					$.post($scope.ip + '/pump/on',{},function(){
						$.get($scope.ip + "/pump.json",function(data){
							$scope.$apply(function(){
								$scope.pump = JSON.parse(data);
							});
						});
					});
				}
				
				$scope.pumpOff = function(){
					$.post($scope.ip + '/pump/off',{},function(){
						$.get($scope.ip + "/pump.json",function(data){
							$scope.$apply(function(){
								$scope.pump = JSON.parse(data);
							});
						});
					});
				}
				

				$scope.dataPoints = parseInt($cookies.get('dataPoints'));
				if (angular.isUndefined($scope.dataPoints) || isNaN($scope.dataPoints) || $scope.dataPoints == 0){
				    $scope.dataPoints = 600;
				}

				$scope.updateRate = parseInt($cookies.get('updateRate'));
				if (angular.isUndefined($scope.updateRate) || isNaN($scope.updateRate) || $scope.updateRate == 0){
				    $scope.updateRate = 5;
				}

				$scope.ip = $cookies.get('ip');
				if (angular.isUndefined($scope.ip)){
				    $scope.ip = "http://192.168.2.4";
				}

				$scope.update();

				$scope.nextResponse = $scope.updateRate;
				window.setInterval(function(){
					$scope.$apply(function(){
						$scope.nextResponse -= 1;
						if($scope.nextResponse < 1){
							$scope.updateNow();
						}
					});
				},1000);
			}
		</script>
		
		
	</head>
	<body class="container-fluid" style="padding-top:21px;">
		<div class="row-fluid">
			<div class="span12">
				<h2>Panel sterownika<small><em>v 0.2</em></small></h2>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span12 well">
				<div id="graph" style="height:400px;"></canvas>
			</div>
			<br/>
		</div>
		<div ng-view></div>
	</body>
	<script>
		window.lines = [
			{label: "tCO", data: [], lines:{show:true},points:{show:false}},
			{label: "tCWU1", data: [], lines:{show:true},points:{show:false}},
			{label: "tCWU2", data: [], lines:{show:true},points:{show:false}},
                        {label: "tSpaliny", data: [], lines:{show:true},points:{show:false}},
                        {label: "t4D", data: [], lines:{show:true},points:{show:false}},
                        {label: "wentylator", data: [], lines:{show:true},points:{show:false}},
                        {label: "wentylator_mod", data: [], lines:{show:true},points:{show:false}},
                        {label: "podajnik", data: [], lines:{show:true},points:{show:false}},
		];
	
		$(function () {
		    var options = {
			legend: { noColumns: 0, labelBoxBorderColor: "#000000", position: "nw"},
			series: { shadowSize: 1 }, // drawing is faster without shadows
			xaxis: { show: true, mode: "time"},
				yaxis: { tickFormatter: function(val){ return val + " &deg;C"}}
		    };
		    window.plot = $.plot($("#graph"), window.lines, options);

		    window.updateGraph = function() {
		        window.plot.setData(window.lines);
				window.plot.setupGrid();
		        window.plot.draw();
		    }
		
			$(window).bind("resize",function(){
				window.plot.resize();
				window.plot.setupGrid();
                                window.plot.draw();
			});
		
		});
	</script>
</html>

